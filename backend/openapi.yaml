openapi: 3.0.0
info:
  title: Ticket-Show v2 API
  description: >
    <div>API created for Ticket-Show using Flask-Restful in OpenAPI standards.
    </div>

    <h3> User Table Schema </h3>  <table>
      <thead>
        <th>Column Name</th>
        <th>Column Type</th>
        <th>Constraints</th>
      </thead>
      <tbody>
      <tr>
        <td>roll</td>
        <td>Integer</td>
        <td>Primary Key, Auto Increment</td>
      </tr>
      <tr>
        <td>username</td>
        <td>String</td>
        <td>Unique, Not Null</td>
      </tr>
      <tr>
        <td>email</td>
        <td>String</td>
        <td>Unique, Not Null</td>
      </tr>
      <tr>
        <td>password</td>
        <td>String</td>
        <td>Unique, Not Null</td>
      </tr>      
      <tr>
        <td>tickets_booked</td>
        <td>Integer</td>
        <td>Not Null, Default 0</td>
      </tr>  
      <tr>
         <td>booked</td>
        <td>Integer</td>
        <td>Not Null, Default 0</td>
      </tr>         
    </tbody> </table>

    <h3> Admin Table Schema </h3>  <table>
      <thead>
        <th>Column Name</th>
        <th>Column Type</th>
        <th>Constraints</th>
      </thead>
      <tbody>
      <tr>
        <td>roll</td>
        <td>Integer</td>
        <td>Primary Key, Auto Increment</td>
      </tr>
      <tr>
        <td>username</td>
        <td>String</td>
        <td>Unique, Not Null</td>
      </tr>
      <tr>
        <td>email</td>
        <td>String</td>
        <td>Unique, Not Null</td>
      </tr>
      <tr>
        <td>password</td>
        <td>String</td>
        <td>Unique, Not Null</td>
      </tr>      
    </tbody> </table>

    <h3> Theater Table Schema </h3>  <table>
      <thead>
        <th>Column Name</th>
        <th>Column Type</th>
        <th>Constraints</th>
      </thead>
      <tbody>
      <tr>
        <td>roll</td>
        <td>Integer</td>
        <td>Primary Key, Auto Increment</td>
      </tr>
      <tr>
        <td>theater_name</td>
        <td>String</td>
        <td>Not Null</td>
      </tr>
      <tr>
        <td>location</td>
        <td>String</td>
        <td>Not Null</td>
      </tr>
      <tr>
        <td>capacity</td>
        <td>Integer</td>
        <td>Not Null</td>
      </tr>
    </tbody> </table>


    <h3> Show Table Schema </h3>  <table>
      <thead>
        <th>Column Name</th>
        <th>Column Type</th>
        <th>Constraints</th>
      </thead>
      <tbody>
      <tr>
        <td>roll</td>
        <td>Integer</td>
        <td>Primary Key, Auto Increment</td>
      </tr>
      <tr>
        <td>show_name</td>
        <td>String</td>
        <td>Not Null</td>
      </tr>
      <tr>
        <td>theater_id</td>
        <td>Integer</td>
        <td>Foreign Key(Theater.roll),Not Null</td>
      </tr>
      <tr>
        <td>tags</td>
        <td>String</td>
        <td>Not Null</td>
      </tr>
      <tr>
        <td>time</td>
        <td>String</td>
        <td>Not Null</td>
      </tr>
      <tr>
        <td>rating</td>
        <td>Integer</td>
        <td>Not Null</td>
      </tr>
      <tr>
        <td>price</td>
        <td>Integer</td>
        <td>Not Null</td>
      </tr>
       <tr>
        <td>poster</td>
        <td>String</td>
        <td>Not Null</td>
      </tr>
       <tr>
        <td>seats_booked</td>
        <td>Integer</td>
        <td>Not Null, Default 0</td>
      </tr>
    </tbody> </table>


     <h3> Booking Table Schema </h3> 
    <table>
      <thead>
        <th>Column Name</th>
        <th>Column Type</th>
        <th>Constraints</th>
      </thead>
      <tbody>
      <tr>
        <td>roll</td>
        <td>Integer</td>
        <td>Primary Key, Auto Increment</td>
      </tr>
      <tr>
        <td>show_id</td>
        <td>Integer</td>
        <td>Foreign Key(Show.roll),Not Null</td>
      </tr>
      <tr>
        <td>user_id</td>
        <td>Integer</td>
        <td>Foreign Key(User.roll),Not Null</td>
      </tr>
       <tr>
        <td>tickets_booked</td>
        <td>Integer</td>
        <td>Not Null</td>
      </tr>
      <tr>
        <td>total_price</td>
        <td>Integer</td>
        <td>Not Null</td>
      </tr>
    </tbody> </table>


    <h3> Error Codes </h3>  <table>
      <thead>
        <th>Resource</th>
        <th>Error Code</th>
        <th>Message</th>
      </thead>
      <tbody>
      <tr>
        <td>User</td>
        <td>USER001</td>
        <td>Username is required</td>
      </tr>
      <tr>
        <td>User</td>
        <td>USER002</td>
        <td>Password should be atleast 4 characters long</td>
      </tr>
       <tr>
        <td>User</td>
        <td>USER003</td>
        <td>Email is required</td>
      </tr>
      <tr>
        <td>Admin</td>
        <td>ADMIN001</td>
        <td>Username is required</td>
      </tr>
      <tr>
        <td>Admin</td>
        <td>ADMIN002</td>
        <td>Password should be atleast 4 characters long</td>
      </tr>
       <tr>
        <td>Admin</td>
        <td>ADMIN003</td>
        <td>Email is required</td>
      </tr>
      <tr>
        <td>Theater</td>
        <td>THE001</td>
        <td>Theater Name is required</td>
      </tr>
      <tr>
        <td>Theater</td>
        <td>THE002</td>
        <td>Location is required</td>
      </tr>
       <tr>
        <td>Theater</td>
        <td>THE003</td>
        <td>Capacity is required</td>
      </tr>
      <tr>
        <td>Show</td>
        <td>SHOW001</td>
        <td>Show Name is required</td>
      </tr>
      <tr>
        <td>Show</td>
        <td>SHOW002</td>
        <td>Tag is required</td>
      </tr>
      <tr>
        <td>Show</td>
        <td>SHOW003</td>
        <td>Time is required</td>
      </tr>
      <tr>
        <td>Show</td>
        <td>SHOW004</td>
        <td>Rating is required</td>
      </tr>
      <tr>
        <td>Show</td>
        <td>SHOW005</td>
        <td>Price is required</td>
      </tr>
      <tr>
        <td>Show</td>
        <td>SHOW006</td>
        <td>Poster is required</td>
      </tr>
      <tr>
        <td>Show</td>
        <td>SHOW007</td>
        <td>Invalid File Type</td>
      </tr>
      <tr>
        <td>Booking</td>
        <td>BOOK001</td>
        <td>Invalid User ID</td>
      </tr>
      <tr>
        <td>Booking</td>
        <td>BOOK002</td>
        <td>No Show Provided</td>
      </tr>
    </tbody> </table>
  version: 1.0.0
servers:
  - url: http://localhost:1234/
paths:
  /api/user/{username}:
    description: End point to read, update and delete a user resource.
    get:
      description: Operation to Read user resource.
      tags:
        - "User"
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
            example: User
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                title: user object
                type: object
                properties:
                  roll:
                    type: integer
                    example: 1
                  username:
                    type: string
                    example: User
                  email:
                    type: string
                    example: user@domain.com
                  tickets_booked:
                    type: integer
                    example: 1
                  booked:
                    type: integer
                    example: 1
        '404':
          description: User not found
        '500':
          description: Internal Server Error
  /api/user:
    description: End point to create user resource
    put:
      description: Operation to update the user resource.
      tags:
        - "User"
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                new username:
                  type: string
                new password:
                  type: string
                  format: password
                new Email:
                  type: string
                  format: email
      responses:
        '200':
          description: Successfuly updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  roll:
                    type: integer
                    example: 1
                  username:
                    type: string
                    example: User
                  email:
                    type: string
                    example: user@domain.com
                  tickets_booked:
                    type: integer
                    example: 1
                  booked:
                    type: integer
                    example: 1
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
        '401':
          description: Unauthorized action
        '404':
          description: User not found
        '500':
          description: Internal Server Error
    delete:
      description: Operation to delete the user resource
      tags:
        - "User"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully Deleted
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
        '401':
          description: Unauthorized action
        '404':
          description: User not found
        '500':
          description: Intenal Server Error
    post:
      description: Operation to create the user resource
      tags:
        - "User"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                  format: password
                email:
                  type: string
                  format: email
              required:
                - username
                - password
                - email
      responses:
        '200':
          description: Successfuly added
          content:
            application/json:
              schema:
                type: object
                properties:
                  roll:
                    type: integer
                    example: 1
                  username:
                    type: string
                    example: User
                  email:
                    type: string
                    example: user@domain.com
                  tickets_booked:
                    type: string
                    example: 0
                  booked:
                    type: integer
                    example: 0
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
        '409':
          description: username already exist
        '500':
          description: Internal Server Error
  /api/admin/{username}:
    description: Url to read, update and delete the admin resource.
    get:
      description: Operation to read admin resource
      tags:
        - "Admin"
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
            example: Admin
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                title: admin object
                type: object
                properties:
                  roll:
                    type: integer
                    example: 1
                  username:
                    type: string
                    example: Admin
                  email:
                    type: string
                    example: admin@domain.com
        '404':
          description: Admin not found
        '500':
          description: Internal server error
  /api/admin:
    description: Url to create admin resource
    put:
      description: Operation to update the admin resource.
      tags:
        - "Admin"
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                new username:
                  type: string
                new password:
                  type: string
                  format: password
                new email:
                  type: string
                  format: email
      responses:
        '200':
          description: Successfuly updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  roll:
                    type: integer
                    example: 1
                  username:
                    type: string
                    example: Admin
                  email:
                    type: string
                    example: admin@domain.com
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
        '401':
          description: Unauthorized action
        '404':
          description: Admin not found
        '500':
          description: Internal Server Error
    delete:
      description: Operation to delete the user resource
      tags:
        - "Admin"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully Deleted
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
        '401':
          description: Unauthorized action
        '404':
          description: Admin not found
        '500':
          description: Intenal Server Error
    post:
      description: Operation to create the post resource
      tags:
        - "Admin"
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                  format: password
                email:
                  type: string
                  format: email
              required:
                - username
                - password
                - email
      responses:
        '200':
          description: Successfuly added
          content:
            application/json:
              schema:
                type: object
                properties:
                  roll:
                    type: integer
                    example: 1
                  username:
                    type: string
                    example: Admin
                  email:
                    type: string
                    example: admin@domain.com
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
        '409':
          description: username already exist
        '500':
          description: Internal Server Error
  /api/theater/{theater_id}:
    description: End point to read, update and delete a user resource.
    get:
      description: Operation to Read theater resource.
      tags:
        - "Theater"
      parameters:
        - in: path
          name: theater_id
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                title: theater object
                type: object
                properties:
                  roll:
                    type: integer
                    example: 1
                  theater_name:
                    type: string
                    example: Theater
                  loaction:
                    type: string
                    example: Location
                  capacity:
                    type: integer
                    example: 100
        '404':
          description: Theater not found
        '500':
          description: Internal Server Error
  /api/theater:
    description: Url to create theater resource
    put:
      description: Operation to update theater resource.
      tags:
        - "Theater"
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                theater_name:
                  type: string
                location:
                  type: string
                capacity:
                  type: integer
      responses:
        '200':
          description: Successfuly updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  roll:
                    type: integer
                    example: 1
                  theater_name:
                    type: string
                    example: Theater
                  location:
                    type: string
                    example: Location
                  capacity:
                    type: integer
                    example: 100
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
        '401':
          description: Unauthorized action
        '404':
          description: Theater not found
        '500':
          description: Internal Server Error
    delete:
      description: Operation to delete the user resource
      tags:
        - "Theater"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully Deleted
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
        '401':
          description: Unauthorized action
        '404':
          description: Theater not found
        '500':
          description: Intenal Server Error
    post:
      description: Operation to create the post resource
      tags:
        - "Theater"
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                theater_name:
                  type: string
                location:
                  type: string
                capacity:
                  type: integer
              required:
                - theater_name
                - location
                - capacity
      responses:
        '200':
          description: Successfuly added
          content:
            application/json:
              schema:
                type: object
                properties:
                  roll:
                    type: integer
                    example: 1
                  theater_name:
                    type: string
                    example: Theater
                  location:
                    type: string
                    example: Location
                  capacity:
                    type: integer
                    example: 100
        '401':
          description: Unauthorized action
        '500':
          description: Intenal Server Error
  /api/theater/{theater_id}/show:
    description: Url to read, update and delete the show resource.
    get:
      description: Operation to read show resource
      tags:
        - "Show"
      parameters:
        - in: path
          name: theater_id
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                title: show object
                type: object
                properties:
                  roll:
                    type: integer
                    example: 1
                  show_name:
                    type: string
                    example: Show
                  theater_id:
                    type: integer
                    example: 1
                  tags:
                    type: string
                    example: "#tags"
                  time:
                    type: string
                    example: "10:00 AM - 12:00 PM"
                  rating:
                    type: integer
                    example: 5
                  price:
                    type: integer
                    example: 399 
                  poster:
                    type: string
                    example: "/static/img/poster.webp"
                  seats_booked:
                    type: integer
                    example: 200
        '404':
          description: Show not found
        '500':
          description: Internal Server Error
    post:
      description: Operation to add show resource
      tags:
        - "Show"
      parameters:
        - in: path
          name: theater_id
          required: true
          schema:
            type: integer
            example: 1
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                  show_name:
                    type: string
                  tags:
                    type: string
                  time:
                    type: string
                  rating:
                    type: integer
                  price:
                    type: integer
                  poster:
                    type: string
              required:
                - show_name
                - tags
                - time
                - rating
                - price
                - poster
      responses:
        '200':
          description: Successfuly added
          content:
            application/json:
              schema:
                type: object
                properties:
                  roll:
                    type: integer
                    example: 1
                  show_name:
                    type: string
                    example: Show
                  theater_id:
                    type: integer
                    example: 1
                  tags:
                    type: string
                    example: "#tags"
                  time:
                    type: string
                    example: "10:00 AM - 12:00 PM"
                  rating:
                    type: integer
                    example: 5
                  price:
                    type: integer
                    example: 399 
                  poster:
                    type: string
                    example: "/static/img/poster.webp"
                  seats_booked:
                    type: integer
                    example: 0      
        '401':
          description: Unauthorized action
        '500':
          description: Intenal Server Error
  /api/theater/{theater_id}/show/{show_id}:
    description: Url to update show resource
    put:
      description: Operation to update show resource.
      tags:
        - "Show"
      parameters:
        - in: path
          name: theater_id
          required: true
          schema:
            type: integer
            example: 1
        - in: path
          name: show_id
          required: true
          schema:
            type: integer
            example: 1
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                  show_name:
                    type: string
                  tags:
                    type: string
                  time:
                    type: string
                  rating:
                    type: integer
                  price:
                    type: integer
      responses:
        '200':
          description: Successfuly updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  roll:
                    type: integer
                    example: 1
                  show_name:
                    type: string
                    example: Show
                  theater_id:
                    type: integer
                    example: 1
                  tags:
                    type: string
                    example: "#tags"
                  time:
                    type: string
                    example: "10:00 AM - 12:00 PM"
                  rating:
                    type: integer
                    example: 5
                  price:
                    type: integer
                    example: 399 
                  poster:
                    type: string
                    example: "/static/img/poster.webp"
                  seats_booked:
                    type: integer
                    example: 0      
        '401':
          description: Unauthorized action
        '404':
          description: Show not found
        '500':
          description: Intenal Server Error
  /api/theater/show/{show_id}:
    description: Url to update show resource
    delete:
      description: Operation to delete show resource.
      tags:
        - "Show"
      parameters:
        - in: path
          name: show_id
          required: true
          schema:
            type: integer
            example: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully Deleted
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
        '401':
          description: Unauthorized action
        '404':
          description: Show not found
        '500':
          description: Intenal Server Error
  /api/booking/{user_id}:
    description: Url to read the booking resource.
    get:
      description: Operation to read show resource
      tags:
        - "Booking"
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                title: booking object
                type: object
                properties:
                  roll:
                    type: integer
                    example: 1
                  show_id:
                    type: integer
                    example: 1
                  user_id:
                    type: integer
                    example: 1
                  tickets_booked:
                    type: integer
                    example: 1
                  total_price:
                    type: integer
                    example: 100
        '404':
          description: User not found
        '500':
          description: Intenal Server Error
  /api/booking/{user_id}/{show_id}:
    description: Url to read the booking resource.
    post:
      description: Operation to read show resource
      tags:
        - "Booking"
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            example: 1
        - in: path
          name: show_id
          required: true
          schema:
            type: integer
            example: 1
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                  tickets_booked:
                    type: integer
              required:
                - tickets_booked
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                title: booking object
                type: object
                properties:
                  roll:
                    type: integer
                    example: 1
                  show_id:
                    type: integer
                    example: 1
                  user_id:
                    type: integer
                    example: 1
                  tickets_booked:
                    type: integer
                    example: 1
                  total_price:
                    type: integer
                    example: 100
        '404':
          description: User not found
        '401':
          description: Unauthorized action
        '500':
          description: Intenal Server Error
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
